
(function($){var DEBUG=false;var VISUAL_DEBUG=DEBUG;$.ui.draggable.prototype.options.obstacle=".ui-draggable-collision-obstacle";$.ui.draggable.prototype.options.restraint=".ui-draggable-collision-restraint";$.ui.draggable.prototype.options.collider=".ui-draggable-dragging";$.ui.draggable.prototype.options.colliderData=null;$.ui.draggable.prototype.options.obstacleData=null;$.ui.draggable.prototype.options.directionData=null;$.ui.draggable.prototype.options.relative="body";$.ui.draggable.prototype.options.preventCollision=false;$.ui.draggable.prototype.options.preventProtrusion=false;$.ui.draggable.prototype.options.collisionVisualDebug=false;$.ui.draggable.prototype.options.multipleCollisionInteractions=[];$.ui.plugin.add("draggable","obstacle",{create:function(event,ui){handleInit.call(this,event,ui);},start:function(event,ui){handleStart.call(this,event,ui);},drag:function(event,ui){return handleCollide.call(this,event,ui);},stop:function(event,ui){handleCollide.call(this,event,ui);handleStop.call(this,event,ui);}});$.ui.plugin.add("draggable","restraint",{create:function(event,ui){handleInit.call(this,event,ui);},start:function(event,ui){if(!$(this).data("draggable").options.obstacle)
{handleStart.call(this,event,ui);}},drag:function(event,ui){if(!$(this).data("draggable").options.obstacle)
{return handleCollide.call(this,event,ui);}},stop:function(event,ui){if(!$(this).data("draggable").options.obstacle)
{handleCollide.call(this,event,ui);handleStop.call(this,event,ui);}}});$.ui.plugin.add("draggable","multipleCollisionInteractions",{create:function(event,ui){handleInit.call(this,event,ui);},start:function(event,ui){if(!$(this).data("draggable").options.obstacle&&!$(this).data("draggable").options.restraint)
{handleStart.call(this,event,ui);}},drag:function(event,ui){if(!$(this).data("draggable").options.obstacle&&!$(this).data("draggable").options.restraint)
{return handleCollide.call(this,event,ui);}},stop:function(event,ui){if(!$(this).data("draggable").options.obstacle&&!$(this).data("draggable").options.restraint)
{handleCollide.call(this,event,ui);handleStop.call(this,event,ui);}}});function CollisionEvent(eventType,collider,obstacle,collisionType,collision)
{jQuery.Event.call(this,eventType);this.collider=collider;this.obstacle=obstacle;this.collisionType=collisionType;this.collision=collision;}
CollisionEvent.prototype=new $.Event("");function CollisionCheckEvent(eventType,collider,obstacle,collisionType)
{jQuery.Event.call(this,eventType);this.collider=collider;this.obstacle=obstacle;this.collisionType=collisionType;}
CollisionCheckEvent.prototype=new $.Event("");function Coords(x1,y1,x2,y2)
{this.x1=x1;this.y1=y1;this.x2=x2;this.y2=y2;}
Coords.prototype.width=function(){return(this.x2-this.x1);}
Coords.prototype.height=function(){return(this.y2+this.y1);}
Coords.prototype.centerx=function(){return(this.x1+this.x2)/2;}
Coords.prototype.centery=function(){return(this.y1+this.y2)/2;}
Coords.prototype.area=function(){return this.width()*this.height();}
Coords.prototype.hash=function(){return"["+[this.x1,this.y1,this.x2,this.y2].join(",")+"]"}
Coords.prototype.distance=function(c)
{return this.distanceTo(c.centerx(),c.centery());}
Coords.prototype.distanceTo=function(x,y)
{var dx=this.centerx()-x;var dy=this.centerx()-y;return Math.sqrt(dx*dx+dy*dy);}
function centerGravity(coordsList)
{if(coordsList.length<=0)return null;var wsumx=0;var wsumy=0;var suma=0;for(var i=0;i<coordsList.length;i++)
{suma+=coordsList[i].area();wsumx+=coordsList[i].centerx()*coordsList[i].area();wsumy+=coordsList[i].centery()*coordsList[i].area();}
var d=Math.sqrt(suma);return new Coords((wsumx/suma)-d/2,(wsumy/suma)-d/2,(wsumx/suma)+d/2,(wsumy/suma)+d/2);}
function jq2Coords(jq,dx,dy)
{if(!dx)dx=0;if(!dy)dy=0;if(jq.parent().length>0)
{var x1=dx+jq.offset().left-(parseInt(jq.css("margin-left"))||0);var y1=dy+jq.offset().top-(parseInt(jq.css("margin-top"))||0);var x2=x1+jq.outerWidth(true);var y2=y1+jq.outerHeight(true);}
else
{var x1=dx+parseInt(jq.css("left"))||0;var y1=dy+parseInt(jq.css("top"))||0;var x2=x1+parseInt(jq.css("width"))||0;var y2=y1+parseInt(jq.css("height"))||0;x2+=(parseInt(jq.css("margin-left"))||0)+(parseInt(jq.css("border-left"))||0)+(parseInt(jq.css("padding-left"))||0)+
(parseInt(jq.css("padding-right"))||0)+(parseInt(jq.css("border-right"))||0)+(parseInt(jq.css("margin-right"))||0);y2+=(parseInt(jq.css("margin-top"))||0)+(parseInt(jq.css("border-top"))||0)+(parseInt(jq.css("padding-top"))||0)+
(parseInt(jq.css("padding-bottom"))||0)+(parseInt(jq.css("border-bottom"))||0)+(parseInt(jq.css("margin-bottom"))||0);}
return new Coords(x1,y1,x2,y2);}
function jqList2CenterGravity(jqList,dx,dy)
{return centerGravity(jqList.toArray().map(function(e,i,a){return jq2Coords($(e),dx,dy);}));}
function Collision(jq,cdata,odata,type,dx,dy,ddata,recentCenterOfGravity,mousex,mousey)
{if(!recentCenterOfGravity)recentCenterOfGravity=jqList2CenterGravity($(this.collider),dx,dy);if(!dx)dx=0;if(!dy)dy=0;this.collision=$(jq);this.collider=$(jq.data(cdata));this.obstacle=$(jq.data(odata));this.direction=jq.data(ddata);this.type=type;this.dx=dx;this.dy=dy;this.centerOfMass=recentCenterOfGravity;this.collisionCoords=jq2Coords(this.collision);this.colliderCoords=jq2Coords(this.collider,dx,dy);this.obstacleCoords=jq2Coords(this.obstacle);if(!mousex)mousex=this.colliderCoords.centerx();if(!mousey)mousex=this.colliderCoords.centery();this.mousex=mousex;this.mousey=mousey;}
Collision.prototype.embedx=function(dirx)
{if(this.type=="collision")
{if(dirx<0)return this.colliderCoords.x2-this.obstacleCoords.x1;if(dirx>0)return this.obstacleCoords.x2-this.colliderCoords.x1;}
else if(this.type=="protrusion")
{if((this.direction=="N")||(this.direction=="S"))return 0;if(dirx<0)return this.colliderCoords.x2-this.obstacleCoords.x2;if(dirx>0)return this.obstacleCoords.x1-this.colliderCoords.x1;}
return 0;}
Collision.prototype.embedy=function(diry)
{if(this.type=="collision")
{if(diry<0)return this.colliderCoords.y2-this.obstacleCoords.y1;if(diry>0)return this.obstacleCoords.y2-this.colliderCoords.y1;}
else if(this.type=="protrusion")
{if((this.direction=="E")||(this.direction=="W"))return 0;if(diry<0)return this.colliderCoords.y2-this.obstacleCoords.y2;if(diry>0)return this.obstacleCoords.y1-this.colliderCoords.y1;}
return 0;}
Collision.prototype.distance=function()
{var cx1=this.centerOfMass.centerx();var cy1=this.centerOfMass.centery();var cx2=this.collisionCoords.centerx();var cy2=this.collisionCoords.centery();return Math.sqrt((cx2-cx1)*(cx2-cx1)+(cy2-cy1)*(cy2-cy1));};Collision.prototype.hash=function(){return this.type+"["+this.colliderCoords.hash()+","+this.obstacleCoords.hash()+"]";}
function collisionComparison(c1,c2)
{var cd1=c1.distance();var cd2=c2.distance();return((cd1<cd2)?-1:(cd1>cd2)?+1:0);};function Interaction(draggable,options)
{this.draggable=$(draggable);this.obstacleSelector=options.obstacle||".ui-draggable-collision-obstacle";this.restraintSelector=options.restraint||".ui-draggable-collision-restraint";this.obstacle=$(options.obstacle||".ui-draggable-collision-obstacle");this.restraint=$(options.restraint||".ui-draggable-collision-restraint");var collider=options.collider||".ui-draggable-dragging";this.collider=draggable.find(collider).andSelf().filter(collider);this.colliderData=options.colliderData||null;this.obstacleData=options.obstacleData||null;this.directionData=options.directionData||null;this.relative=options.relative||"body";this.preventCollision=options.preventCollision||false;this.preventProtrusion=options.preventProtrusion||false;this.collisions=$();this.protrusions=$();}
function uiTrigger(_this,widget,eventName,event,ui)
{$.ui.plugin.call(widget,eventName,event,ui);_this.trigger(event,ui);}
function handleInit(event,ui,type)
{var w=$(this).data("draggable");var o=w.options;}
function handleStart(event,ui)
{VISUAL_DEBUG=$(this).data("draggable").options.collisionVisualDebug;$(this).data("jquery-ui-draggable-collision-recent-position",ui.originalPosition);}
function handleStop(event,ui)
{$(this).removeData("jquery-ui-draggable-collision-recent-position");if(VISUAL_DEBUG)$(".testdebug").remove();VISUAL_DEBUG=DEBUG;}
function handleCollide(event,ui)
{var rp=$(this).data("jquery-ui-draggable-collision-recent-position");if(DEBUG){console.log("handleCollision ******************************************************************");}
if(VISUAL_DEBUG)$(".testdebug").remove();var ctyp="collision";var prec="precollision";var postc="postcollision";var ptyp="protrusion";var prep="preprotrusion";var postp="postprotrusion";var widget=$(this).data("draggable");var o=widget.options;var ilist=[];if(o.obstacle||o.restraint)ilist.push(new Interaction($(this),o));if(o.multipleCollisionInteractions&&o.multipleCollisionInteractions["length"])
{var mci=o.multipleCollisionInteractions;for(var i=0;i<mci.length;i++)
ilist.push(new Interaction($(this),mci[i]));}
if(ilist.length<=0)
{$(this).data("jquery-ui-draggable-collision-recent-position",ui.position);return;}
var d1="ui-draggable-collision-collider-temp";var d2="ui-draggable-collision-obstacle-temp";var d3="ui-draggable-collision-direction-temp";var di="ui-draggable-collision-interaction-temp";var d=event.data;var as="<div />";if(d&&d.as)as=d.as;var e;var maxiter=1;for(var i=0;i<ilist.length;i++)
{maxiter+=2*ilist[i].collider.length*(ilist[i].obstacle.length+ilist[i].restraint.length);if(VISUAL_DEBUG)
{ilist[i].obstacle.each(function(){$(this).clone().removeClass().empty().addClass("testdebug").css("pointer-events","none").css("background","transparent").css("padding","0px").css("border","1px solid black").css("margin","-1px").appendTo($(this).parent());});ilist[i].restraint.each(function(){$(this).clone().removeClass().empty().addClass("testdebug").css("pointer-events","none").css("background","transparent").css("padding","0px").css("border","1px solid magenta").css("margin","-1px").appendTo($(this).parent());});}
if(ilist[i].obstacleSelector)
{e=new CollisionCheckEvent(prec,$(this),ilist[i].obstacle,ctyp)
uiTrigger(ilist[i].collider,widget,prec,e,ui);}
if(ilist[i].restraintSelector)
{e=new CollisionCheckEvent(prep,$(this),ilist[i].restraint,ptyp)
uiTrigger(ilist[i].collider,widget,prep,e,ui);}}
var origleft=rp.left;var origtop=rp.top;var origdx=ui.position.left-rp.left;var origdy=ui.position.top-rp.top;var dx;var dy;var ocl=[];var cocl=[];var pocl=[];var ccl=[];var $cont=$();if(widget.containment)
{maxiter+=2;var cn=widget.containment;$cont=$("<div />").offset({left:cn[0],top:cn[1]}).width(cn[2]-cn[0]+$(this).width()).height(cn[3]-cn[1]+$(this).height());if(VISUAL_DEBUG)
$cont.clone().css("background","transparent").css("border","1px solid blue").css("margin","-1px").css("padding","0px").addClass("testdebug").appendTo();}
var deltaCache={};var iter=0;while(iter<maxiter)
{iter++;dx=ui.position.left-rp.left;dy=ui.position.top-rp.top;ocl=[];cocl=[];pocl=[];for(var i=0;i<ilist.length;i++)
{ilist[i].collisions=$();ilist[i].protrusions=$();var $c=ilist[i].collider;var $o=ilist[i].obstacle;var $r=ilist[i].restraint;if(DEBUG)console.log("trying inter,c,o,r=",ilist[i],$c,$o,$r)
$c.each(function(){$(this).data("jquery-collision-coordinates",jq2Coords($(this),dx,dy));});var cog=jqList2CenterGravity($c);for(var ci=0;ci<$c.length;ci++)
{var oc=$($c[ci]).collision($o,{mode:"collision",as:"<div />",colliderData:d1,obstacleData:d2,directionData:d3,relative:"body"});if(DEBUG){console.log("collisions",oc);}
oc.data(di,ilist[i]);ilist[i].collisions=ilist[i].collisions.add(oc);if(oc.length>0)
{cocl=oc.toArray().map(function(e,i,a){return new Collision($(e),d1,d2,"collision",dx,dy,d3,cog,event.pageX,event.pageY);});ocl=ocl.concat(cocl);if(VISUAL_DEBUG)$("<span>c"+iter+"</span>").appendTo(oc.addClass("testdebug").css("position","absolute").css("padding","0px").css("border","1px solid black").css("margin","-1").appendTo("body"));}
oc=$($c[ci]).collision($r,{mode:"protrusion",as:"<div />",colliderData:d1,obstacleData:d2,directionData:d3,relative:"body"});if(DEBUG){console.log("protrusions",oc);}
oc.data(di,ilist[i]);ilist[i].protrusions=ilist[i].protrusions.add(oc);if(oc.length>0)
{pocl=oc.toArray().map(function(e,i,a){return new Collision($(e),d1,d2,"protrusion",dx,dy,d3,cog,event.pageX,event.pageY);});ocl=ocl.concat(pocl);if(VISUAL_DEBUG)$("<span>p"+iter+"</span>").appendTo(oc.addClass("testdebug").css("position","absolute").css("padding","0px").css("border","1px solid magenta").css("margin","-1").appendTo("body"));}}
$c.each(function(){$(this).removeData("jquery-collision-coordinates");});}
if(widget.containment)
{$(this).each(function(){$(this).data("jquery-collision-coordinates",jq2Coords($(this),dx,dy));});var $cc=$(this).collision($cont,{mode:"protrusion",as:"<div />",colliderData:d1,obstacleData:d2,directionData:d3,relative:"body"});ccl=$cc.toArray().map(function(e,i,a){return new Collision($(e),d1,d2,"protrusion",dx,dy,d3,jqList2CenterGravity($c),event.pageX,event.pageY);});if(VISUAL_DEBUG)$("<span>x"+iter+"</span>").appendTo($cc.addClass("testdebug").css("position","absolute").css("padding","0px").css("border","1px solid blue").css("margin","-1").appendTo("body"));$(this).each(function(){$(this).removeData("jquery-collision-coordinates");});}
if(DEBUG)console.log("checking if we have any collisions at all...");if((cocl.length<=0)&&(pocl.length<=0)&&(ccl.length<=0))break;var doneAdjusting=true;for(var i=0;i<ilist.length;i++)
{if(DEBUG)console.log("checking adjustments for",ilist[i],"ccl=",ccl,"pc,cl,pp,pl=",ilist[i].preventCollision,ilist[i].collisions.length,ilist[i].preventProtrusion,ilist[i].protrusions.length);if(DEBUG)console.log("checking if we overstepped our containment...");if((!ilist[i].preventCollision)&&(!ilist[i].preventProtrusion)&&(ccl.length>0))
{if(DEBUG){console.log("not trying to prevent anything, but jumped our containment",ilist[i]);}
doneAdjusting=false;}
if(DEBUG)console.log("checking if we want to block something we have collided with...");if((ilist[i].preventCollision&&((ilist[i].collisions.length>0)||(ccl.length>0)))||(ilist[i].preventProtrusion&&((ilist[i].protrusions.length>0)||(ccl.length>0))))
{if(DEBUG){console.log("trying to prevent something that we're still hitting",ilist[i]);}
doneAdjusting=false;}}
if(doneAdjusting)
{if(DEBUG){console.log("done adjusting");}
break;}
if(DEBUG)console.log("calculating delta with ocl,ccl=",ocl,ccl);var d=delta(ocl.concat(),ccl,deltaCache);if(DEBUG)console.log("dx=",d.dx,"dy=",d.dy);if(d.dx==0&&d.dy==0)break;ui.position.left+=d.dx;ui.position.top+=d.dy;}
dx=ui.position.left-rp.left;dy=ui.position.top-rp.top;if((iter>maxiter)||(ccl.length>0)||(o.preventProtrusion&&(pocl.length>0))||(o.preventCollision&&(cocl.length>0)))
{if(DEBUG)console.log("reverting, i=",iter,"maxiter=",maxiter,"cocl=",cocl,"cocl.len=",cocl.length,"pocl=",pocl,"pocl.len=",pocl.length,"ccl=",ccl,"ccl.len=",ccl.length,"origdx=",origdx,"origdy=",origdy,"dx=",dx,"dy=",dy);ui.position.left=origleft;ui.position.top=origtop;}
for(var ci=0;ci<ocl.length;ci++)
{var oc=ocl[ci];for(var oci=0;oci<oc.collision.length;oci++)
{var $occ=$(oc.collision[oci]);var $coll=$($occ.data(d1));var $obs=$($occ.data(d2));var dir=$occ.data(d3);var inter=$occ.data(di);$occ.removeData(d1).removeData(d2).removeData(d3).removeData(di);if(inter.colliderData)$occ.data(inter.colliderData,$coll);if(inter.obstacleData)$occ.data(inter.obstacleData,$obs);if(dir&&inter.directionData)$occ.data(inter.directionData,dir);if(inter.relative&&inter.relative!="body")
{var off=$occ.offset();var rel=inter.relative=="collider"?$coll:inter.relative=="obstacle"?$obs:$(inter.relative);var ro=rel.offset();$occ.offset({left:off.left-ro.left,top:off.top-ro.top});}
if(inter.obstacleSelector&&(oc.type=="collision"))
{e=new CollisionEvent(ctyp,$coll,$obs,ctyp,$occ);uiTrigger($coll,widget,ctyp,e,ui);}
if(inter.restraintSelector&&(oc.type=="protrusion"))
{e=new CollisionEvent(ptyp,$coll,$obs,ptyp,$occ);uiTrigger($coll,widget,ptyp,e,ui);}}}
for(var i=0;i<ilist.length;i++)
{if(ilist[i].obstacleSelector)
{e=new CollisionCheckEvent(postc,$(this),ilist[i].obstacle,ctyp)
uiTrigger(ilist[i].collider,widget,postc,e,ui);}
if(ilist[i].restraintSelector)
{e=new CollisionCheckEvent(postp,$(this),ilist[i].restraint,ptyp)
uiTrigger(ilist[i].collider,widget,postp,e,ui);}}
$(this).data("jquery-ui-draggable-collision-recent-position",ui.position);}
function delta(collisions,containments,cache)
{var c=collisions.concat(containments).sort(collisionComparison);if(VISUAL_DEBUG){if(!cache.deltanum){cache.deltanum=1;}};if(DEBUG){console.log("collisions, in order: ",c.map(function(e,i,a){return e.collisionCoords.hash();}).join(","));}
while(c.length>0)
{var thisc=c.pop();var co=thisc.obstacleCoords;var cc=thisc.colliderCoords;var cv=thisc.collisionCoords;var ct=thisc.type;var cd=thisc.direction;var key=thisc.hash();var dirx=(thisc.type=="protrusion"?(cc.centerx()>co.centerx()?-1:+1):(cc.centerx()>co.centerx()?+1:-1));var diry=(thisc.type=="protrusion"?(cc.centery()>co.centery()?-1:+1):(cc.centery()>co.centery()?+1:-1));var dx=thisc.embedx(dirx);var dy=thisc.embedy(diry);if(DEBUG)console.log("cv,cc,co,ct,dx,dy,thisc.dx,thisc.dy,dirx,diry,co.centerx,co.centery,cc.centerx,cc.centery,key=",cv.hash(),cc.hash(),co.hash(),ct,dx,dy,thisc.dx,thisc.dy,dirx,diry,co.centerx(),co.centery(),cc.centerx(),cc.centery(),key);var tryToAdjustDX=(dx<dy);if(key in cache&&cache[key]=="tried reverse"){if(DEBUG)console.log("but already tried reverse too...");continue;}
else if(key in cache&&cache[key]=="tried normal"){if(DEBUG)console.log("but already tried this...");tryToAdjustDX=!tryToAdjustDX;cache[key]="tried reverse";}
else{cache[key]="tried normal";}
if(tryToAdjustDX)
{if(VISUAL_DEBUG){$("<span>"+thisc.direction+"d"+cache.deltanum+".dx="+dx+"*"+dirx+"</span>").css("color","black").addClass("testdebug").css("position","absolute").css("white-space","nowrap").offset({left:thisc.mousex,top:thisc.mousey+20*(cache.deltanum-1)}).appendTo("body");cache.deltanum++;};if(dx<=0){c.push(thisc);continue;}
return{"dx":dx*dirx,"dy":0};}
else
{if(VISUAL_DEBUG){$("<span>"+thisc.direction+"d"+cache.deltanum+".dy="+dy+"*"+diry+"</span>").css("color","black").addClass("testdebug").css("position","absolute").css("white-space","nowrap").offset({left:thisc.mousex,top:thisc.mousey+20*(cache.deltanum-1)}).appendTo("body");cache.deltanum++;};if(dy<=0){c.push(thisc);continue;}
return{"dx":0,"dy":dy*diry};}}
return{"dx":0,"dy":0};};})(jQuery);
